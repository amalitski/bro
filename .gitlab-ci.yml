---
variables:
  WERF_VERSION: "1.1 stable"

.base_deploy: &base_deploy
  stage: deploy
  script:
    - type multiwerf && source <(multiwerf use ${WERF_VERSION})
    - type werf && source <(werf ci-env gitlab --tagging-strategy tag-or-branch --verbose)
    - werf deploy
      --stages-storage :local
      --namespace ${CI_ENVIRONMENT_SLUG}
      --set "global.ci_url=$(echo ${CI_ENVIRONMENT_URL} | cut -d / -f 3)"
  dependencies:
    - Build
  tags:
    - werf

stages:
  - build
  - deploy
  - cleanup

Build:
  stage: build
  script:
    - type multiwerf && source <(multiwerf use ${WERF_VERSION})
    - type werf && source <(werf ci-env gitlab --tagging-strategy tag-or-branch --verbose)
    - werf build-and-publish --stages-storage :local
  except:
    - schedules
  tags:
    - werf

Deploy to Test:
  <<: *base_deploy
  stage: deploy
  environment:
    name: test
    url: https://test-kube.timebook.ru
  only:
    refs:
      - stages/test-kube.timebook.ru
  except:
    - schedules
  tags:
    - werf

Cleanup:
  stage: cleanup
  script:
    - type multiwerf && source <(multiwerf use ${WERF_VERSION})
    - type werf && source <(werf ci-env gitlab --tagging-strategy tag-or-branch --verbose)
    - docker login -u nobody -p ${WERF_IMAGES_CLEANUP_PASSWORD} ${WERF_IMAGES_REPO}
    - werf cleanup --stages-storage :local
  only:
    - schedules
  tags:
    - werf
